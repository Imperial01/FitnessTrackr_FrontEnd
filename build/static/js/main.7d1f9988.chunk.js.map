{"version":3,"sources":["utils/api.js","components/Register.js","components/Routines.js","components/App.js","index.js"],"names":["APIURL","fetchRegister","username","password","fetch","method","headers","body","JSON","stringify","response","json","result","console","log","token","alert","error","fetchAllRoutines","Register","setToken","useState","setUserName","setPassword","handleSubmit","event","preventDefault","registeredToken","id","onSubmit","htmlFor","type","name","value","onChange","target","required","className","Routines","props","routines","setRoutines","search","routineID","setRoutineID","featuredPost","setFeaturedRoutine","setSearch","routine","useHistory","useEffect","placeholder","style","fontSize","onClick","handleClick","filter","title","description","toLowerCase","includes","map","goal","creatorName","activities","duration","count","App","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d1f9988.chunk.js","sourcesContent":["const APIURL = `http://fitnesstrac-kr.herokuapp.com/api`\n\nexport const fetchRegister = async (username, password) => {\n    const response = await fetch(`${APIURL}/users/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    })\n\n    const result = await response.json();\n    console.log(result);\n\n    if(!result.token){\n        alert(result.error)\n    } else {\n        return(result.token)\n    }\n}\n\nexport const fetchAllRoutines = async () => {\n    const response = await fetch(`${APIURL}/routines`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }})\n    const result = await response.json();\n    console.log(result);\n    }\n    ","import React, { useState } from \"react\";\nimport { fetchRegister } from \"../utils/api\";\n\n\n\n\nconst Register = ({token, setToken}) => {\n\n    const [username, setUserName] = useState('');\n    const [password, setPassword] = useState(''); \n\n    const handleChangeUser = (event) => {\n        setUserName(event.target.value)\n    }\n\n    const handleChangePassword = (event) => {\n        setPassword(event.target.value)\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); \n        const registeredToken = await fetchRegister(username, password)\n        setToken(registeredToken)\n        console.log(token)\n        setUserName('')\n        setPassword('')\n    }\n\n\n\n    return (\n        <>\n            {token ? \n            <>\n                <h1>You're Signed Up! Get Tracking!</h1>\n            </> :\n         <>\n            <h1 id = \"register\">Sign Up</h1>\n                <div id= \"signup-container\">\n                    <form id= \"register-form\" onSubmit={handleSubmit}>\n                        <label htmlFor=\"Username\">Username</label>\n                        <input type=\"text\" name=\"username\" value={username} onChange={handleChangeUser} required/>\n                        <label htmlFor=\"Password\">Password{`(*)`}</label>\n                        <input type=\"password\" name=\"password\" value={password} onChange={handleChangePassword} required/>\n                        <button className=\"register-button\" type = \"submit\">Sign Up</button>\n                    </form>\n                    <small>* must be {`>`} 8 characters</small>\n                </div> \n         </> \n        \n        }\n            \n        </>\n\n    )\n}\n\n\nexport default Register;","// Routines\n\n// As any user on the Routines tab, I want to:\n\n// see a list of all public routines showing:\n// The routine name, goal, and creator's username\n// A list of activities for the routine, including their name, description, and duration and/or count\n// As a registered user on the My Routines tab, I want to:\n\n// be shown a form to create a new routine\n\n// the form should have text fields for name and goal\n// for each routine which is owned by me I should\n\n// be able to update the name and goal for the routine\n// be able to delete the entire routine\n// be able to add an activity to a routine via a small form which has a dropdown for all activities, an inputs for count and duration\n// be able to update the duration or count of any activity on the routine\n// be able to remove any activity from the routine\n\n\nimport { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllRoutines } from \"../utils/api\";\n\nconst Routines = (props) => {\n    const {\n        routines, setRoutines,\n        routineID, setRoutineID, token,\n        featuredPost, setFeaturedRoutine, search, setSearch } = props\n\n    const history = useHistory();\n\n    const routine = async () => {\n        setRoutines(await fetchAllRoutines())\n    }\n\n    useEffect(() => {\n        routine();\n    }, []);\n\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    // const handleClick = () => {\n    //     token ? history.push('/createform') :\n    //         alert(\"Please Login\")\n    // }\n\n    // const handleFeaturedRoutine = (event, routine) => {\n    //     // grab that routine and display on screen\n    //     if (token) {\n    //         setFeaturedRoutine(routine);\n    //         setRoutineID(routine._id)\n    //         history.push(`/routines/${routine._id}`)\n    //     } else {\n    //         alert(\"please Login\")\n    //     }\n\n    //     // change the URL path to ${APIURL}/routine/routineID\n    // }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"search\" placeholder=\"Search Routine\" value={search} onChange={handleSearch}></input>\n                <button style={{ fontSize: \"15px\" }} onClick={handleClick}>Create a Routine +</button>\n            </form>\n\n            {\n                routines.filter(routine => {\n\n                    return `${routine.title} ${routine.description}`\n                        //After creating a routine, I can't see my Routines because of a TypeError \"Cannot read properties of undefined (reading \"title\") Routine.js line 49:1\n                        .toLowerCase()\n                        .includes(search.toLowerCase())\n                }).map((routine) => {\n                    return (\n                        <>\n                            {/* <div onClick={(event) => {\n                                { handleFeaturedRoutine(event, routine) }\n                            }}> */}\n                                <h1>{routine.name}</h1>\n                                <p>{routine.goal}</p>\n                                <div>\n                                    <b>By: </b> {routine.creatorName}\n                                </div>\n                                <div>\n                                    <b></b> {routine.activities.name}\n                                    <b></b> {routine.activities.description}\n                                    <b></b> {routine.activities.duration}\n                                    <b></b> {routine.activities.count}\n                                </div>\n                            \n                        </>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default Routines;","import { React, useState } from \"react\";\nimport { Link, Route, Switch, NavLink } from \"react-router-dom\"\nimport './styles.css'\nimport Register from \"./Register\";\nimport Routines from \"./Routines\";\n\n\n\nconst App = () => {\n\n    const [token, setToken] = useState('')\n    const [username, setUserName] = useState('')\n\n    return <main>\n        <nav id= 'navbar'>\n            <div id = \"links\">\n                <NavLink to =\"/home\" className= \"navlink\" activeClassName = \"active\">Home</NavLink> |\n                <NavLink to =\"/routines\" className= \"navlink\" activeClassName = \"active\"> Routines</NavLink> |\n                <NavLink to =\"/MyRoutines\" className= \"navlink\" activeClassName = \"active\"> My Routines</NavLink> |\n                <NavLink to =\"/activities\" className= \"navlink\" activeClassName = \"active\"> Activities</NavLink> |\n                <NavLink to =\"/login\" className= \"navlink\" activeClassName = \"active\"> Login</NavLink>\n            </div>\n        </nav>\n\n        <Route exact path = '/'>\n            <Register token = {token} setToken = {setToken}/> \n        </Route>\n        <Route path = '/Routines'>\n            <Routines setSearch = {setSearch} search = {search} routines = {routines} setRoutines = {setRoutines}/> \n        </Route>\n\n\n\n    </main>\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport {App} from \"./components\"\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('app')\n)\n"],"sourceRoot":""}